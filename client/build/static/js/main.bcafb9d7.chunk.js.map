{"version":3,"sources":["logo.svg","components/PrivateRoute.js","utils/useFetch.js","pages/Login.js","pages/Contests.js","pages/NotFound.js","pages/ContestDetail.js","App.js","index.js"],"names":["PrivateRoute","Component","component","isSignedIn","rest","render","props","to","doFetch","a","url","method","body","token","CREDENTIALS","FETCH_URL","headers","Headers","append","fetch","res","JSON","stringify","console","log","json","data","error","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","admin","setAdmin","setToken","useState","isModalVisible","setIsModalVisible","formInfo","setFormInfo","onFinish","values","description","showModal","access_token","handleOk","className","type","htmlType","onClick","undefined","title","visible","onOk","onCancel","name","onFinishFailed","errorInfo","Item","label","rules","required","message","Password","initialColumns","dataIndex","key","row","Contests","start_date","payment","contests","setContests","isLoading","setIsLoading","useEffect","newContests","getContests","e","LoadingOutlined","style","fontSize","spin","Fragment","dataSource","columns","NotFound","ContestDetail","contest","setContest","contestId","useParams","id","newContest","getContest","bordered","end_date","script","recommendations","status","text","App","signOut","theme","mode","defaultSelectedKeys","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bcafb9d7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, isSignedIn, ...rest }) => {\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        isSignedIn ? <Component {...props} /> : <Redirect to=\"/signin\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","export async function doFetch(url = \"\", method = \"GET\", body, token) {\n  try {\n    const CREDENTIALS = `JWT ${token}`;\n    const FETCH_URL = `http://localhost:5000${url}`;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    let res;\n    if (method === \"GET\") {\n      if (token) {\n        const headers = new Headers();\n        headers.append(\"Authorization\", CREDENTIALS);\n        res = await fetch(FETCH_URL, { headers });\n      } else {\n        res = await fetch(FETCH_URL);\n      }\n    } else if (method === \"POST\" || method === \"PUT\") {\n      if (token) headers.append(\"Authorization\", CREDENTIALS);\n      res = await fetch(FETCH_URL, {\n        method,\n        body: JSON.stringify(body),\n        headers,\n      });\n    } else if (method === \"DELETE\") {\n      if (token) {\n        headers.append(\"Authorization\", CREDENTIALS);\n        res = await fetch(FETCH_URL, { method, headers });\n      } else {\n        res = await fetch(FETCH_URL, { method });\n      }\n    }\n    console.log(res);\n    const data = await res.json();\n    return data;\n  } catch (e) {\n    console.error(\"error\", e);\n    return { error: e };\n  }\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  Row,\n  Col,\n  Modal,\n  DatePicker,\n  InputNumber,\n} from \"antd\";\nimport { admin } from \"../App\";\nimport { doFetch } from \"../utils/useFetch\";\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Login = ({ admin, setAdmin, setToken, token }) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [formInfo, setFormInfo] = useState({});\n\n  const onFinish = async (values) => {\n    console.log(JSON.stringify(values));\n    try {\n      const data = await doFetch(\"/auth\", \"POST\", values, token);\n      console.log(data);\n      if (data.description === \"Invalid credentials\") {\n        setFormInfo(values);\n        return showModal();\n      }\n      console.log(data);\n      setToken(data.access_token);\n      setAdmin(values);\n    } catch (e) {\n      console.error(\"error\", e);\n    }\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = async () => {\n    setIsModalVisible(false);\n    const data = await doFetch(\"/users\", \"POST\", formInfo, token);\n\n    if (data && !data.error && setAdmin) {\n      setAdmin(data);\n      onFinish(data);\n    }\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.error(\"Failed:\", errorInfo);\n  };\n\n  if (admin) {\n    return (\n      <Row className=\"mt-4\">\n        <Col span={12} offset={6}>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            onClick={() => {\n              if (setAdmin) setAdmin(undefined);\n            }}\n          >\n            Cerrar Sesión\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <Row className=\"mt-4\">\n      <Modal\n        title=\"Crear Cuenta\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <p>Email No Existe Desea Crear Una Nueva Cuenta</p>\n      </Modal>\n      <Col span={12} offset={6}>\n        <Form\n          {...layout}\n          name=\"basic\"\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            label=\"Usuario\"\n            name=\"username\"\n            rules={[{ required: true, message: \"Campo obligatorio!\" }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[{ required: true, message: \"Campo obligatorio!\" }]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Table, Col } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { doFetch } from \"../utils/useFetch\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\n\nconst initialColumns = [\n  {\n    title: \"URL\",\n    dataIndex: \"url\",\n    key: \"url\",\n    render: (name, row) => {\n      return <Link to={`/${row.url}/home`}>{name}</Link>;\n    },\n  },\n  {\n    title: \"Nombre\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Fecha Inicio\",\n    dataIndex: \"start_date\",\n    key: \"start_date\",\n  },\n  {\n    title: \"Pago\",\n    dataIndex: \"payment\",\n    key: \"payment\",\n  },\n];\n\nconst Contests = ({ admin, setAdmin, token, setToken }) => {\n  const [contests, setContests] = useState([\n    { url: \"shit\", name: \"hello\", start_date: \"29-09-1999\", payment: 5000 },\n  ]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    async function getContests() {\n      const newContests = await doFetch(\"/contests\", \"GET\", null, token);\n      console.log(newContests);\n      // setContests(newContests);\n    }\n    try {\n      setIsLoading(true);\n      getContests();\n    } catch (e) {\n      console.error(\"error\", e);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [token, setContests]);\n\n  if (isLoading) {\n    return (\n      <Row className=\"mt-4\">\n        <Col>\n          <LoadingOutlined style={{ fontSize: 24 }} spin />\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Row className=\"mt-4\"></Row>\n      <Row>\n        <Col span={24}>\n          <Table dataSource={contests} columns={initialColumns} />\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default Contests;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFound = () => (\n  <div>\n    <p>Click para redireccionar a \"/\" que es una ruta conocida:</p>\n    <Link to=\"/\">Click!!</Link>\n  </div>\n);\n\nexport default NotFound;\n","import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Badge, Descriptions } from \"antd\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { doFetch } from \"../utils/useFetch\";\nconst ContestDetail = ({ admin, setAdmin, token, setToken }) => {\n  const [contest, setContest] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const { contestId } = useParams();\n\n  useEffect(() => {\n    async function getContest(id) {\n      try {\n        setIsLoading(true);\n        const newContest = await doFetch(`/contests/${id}`, \"GET\", null, token);\n        setContest(newContest);\n      } catch (e) {\n        console.error(\"error\", e);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getContest(contestId);\n  }, [contestId, setContest, token]);\n\n  if (isLoading) {\n    return (\n      <Row className=\"mt-4\">\n        <Col>\n          <LoadingOutlined style={{ fontSize: 24 }} spin />\n        </Col>\n      </Row>\n    );\n  }\n\n  if (!contest) {\n    return (\n      <>\n        <Row>\n          <Col>\n            <h3>Concurso no encontrado! Click para redireccionar</h3>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <h3>\n              <Link to=\"/\">Inicio</Link>\n            </h3>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <Row className=\"mt-4\">\n        <Col span={24}>\n          <Descriptions title=\"User Info\" bordered>\n            <Descriptions.Item label=\"Nombre\">{contest.name}</Descriptions.Item>\n            <Descriptions.Item label=\"Pago\">\n              {contest.payment}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Fecha Inicial\" span={6}>\n              {contest.start_date}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Fecha Final\" span={6}>\n              {contest.end_date}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Guion\" span={6}>\n              {contest.script}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Recomendaciones\" span={6}>\n              {contest.recommendations}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Estado\" span={3}>\n              <Badge status=\"processing\" text=\"Running\" />\n            </Descriptions.Item>\n          </Descriptions>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nexport default ContestDetail;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Menu } from \"antd\";\nimport {\n  BrowserRouter as Browser,\n  Route,\n  Switch,\n  Link,\n} from \"react-router-dom\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Login from \"./pages/Login\";\nimport { useMemo, useState } from \"react\";\nimport Contests from \"./pages/Contests\";\nimport NotFound from \"./pages/NotFound\";\nimport ContestDetail from \"./pages/ContestDetail\";\n\nfunction App() {\n  const [admin, setAdmin] = useState();\n  const [token, setToken] = useState(\"\");\n\n  // const userValue = useMemo(() => (\n  // {user, setUser}\n  // ), [setUser, user]);\n\n  const signOut = async () => {\n    // const res = await fetch(\"/signOut\");\n    // const data = await res.json();\n    setAdmin(undefined);\n  };\n\n  return (\n    <div className=\"App\">\n      <Browser>\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"1\"]}>\n          <Menu.Item key=\"1\">\n            {!!token ? (\n              <Link to=\"/\" onClick={signOut}>\n                Cerrar Sesion\n              </Link>\n            ) : (\n              <Link to=\"/\">{\"Login\"}</Link>\n            )}\n          </Menu.Item>\n        </Menu>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            component={() =>\n              !admin ? (\n                <Login\n                  token={token}\n                  setToken={setToken}\n                  admin={admin}\n                  setAdmin={setAdmin}\n                />\n              ) : (\n                <PrivateRoute\n                  path=\"/\"\n                  exact\n                  isSignedIn={!!admin}\n                  component={() => (\n                    <Contests\n                      admin={admin}\n                      setAdmin={setAdmin}\n                      token={token}\n                      setToken={setToken}\n                    />\n                  )}\n                />\n              )\n            }\n          />\n          <PrivateRoute\n            path=\"/:contestId/home\"\n            exact\n            isSignedIn={!!admin}\n            component={() => (\n              <ContestDetail\n                admin={admin}\n                setAdmin={setAdmin}\n                token={token}\n                setToken={setToken}\n              />\n            )}\n          />\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </Browser>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}