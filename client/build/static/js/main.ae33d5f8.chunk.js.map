{"version":3,"sources":["components/PrivateRoute.js","utils/useFetch.js","pages/Login.js","components/FormEvent.js","pages/Contests.js","pages/NotFound.js","components/VoiceDetail.js","pages/ContestDetail.js","App.js","index.js"],"names":["PrivateRoute","Component","component","isSignedIn","rest","render","props","to","doFetch","a","url","method","body","token","URL","process","console","log","CREDENTIALS","FETCH_URL","headers","Headers","append","fetch","res","JSON","stringify","ok","Error","json","error","data","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","useState","isModalVisible","setIsModalVisible","formInfo","setFormInfo","useContext","AuthContext","setAdmin","admin","setToken","onFinish","values","description","id","v4","showModal","access_token","handleOk","className","title","visible","onOk","onCancel","name","onFinishFailed","errorInfo","Item","label","rules","required","message","Password","type","htmlType","RangePicker","DatePicker","validateMessages","types","email","number","range","FormEvent","setContests","postContest","sd","startEndDate","_d","ed","start_date","getUTCDate","getUTCMonth","getUTCFullYear","finish_date","script","bannerPath","recommendations","payment","contestData","banner_path","newContest","prevContests","TextArea","initialColumns","dataIndex","key","row","Contests","contests","isLoading","setIsLoading","useEffect","newContests","getContests","e","LoadingOutlined","style","fontSize","spin","dataSource","columns","NotFound","VoiceDetail","voice","page","idx","contest","setVoices","endpoint","setEndpoint","onDelete","undefined","prev","filter","cur","descargaConvertida","blob","audio","aTag","document","createElement","href","target","click","last_name","onClick","filename","class","role","controls","src","danger","ContestDetail","setName","lastName","setLastName","setEmail","file","setFile","observaciones","setObservaciones","setContest","voices","setPage","totalVoices","setTotalVoices","isEditing","setIsEditing","contestUrl","useParams","history","useHistory","getContest","idContest","newVoices","total","getVoices","onEdit","editedContest","push","observation_message","formData","FormData","ENDPOINT","x","prevVoices","Fragment","bordered","justify","hidden","encType","onChange","value","files","postVoice","length","map","defaultCurrent","pageSize","createContext","App","authentication","useMemo","signOut","Provider","theme","mode","defaultSelectedKeys","path","exact","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ae33d5f8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, isSignedIn, ...rest }) => {\r\n  return (\r\n    // Show the component only when the user is logged in\r\n    // Otherwise, redirect the user to /signin page\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isSignedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","export async function doFetch(url = \"/\", method = \"GET\", body, token) {\r\n  let URL = `http://${process.env.REACT_APP_URL_ENDPOINTS_TEST}${url}`;\r\n  console.log(process.env.NODE_ENV);\r\n  if (process.env.NODE_ENV === \"production\") {\r\n    URL = `http://${process.env.REACT_APP_URL_ENDPOINTS_PROD}${url}`;\r\n    \r\n  }\r\n  console.log(\"URL FINAL: \", URL)\r\n  try {\r\n    const CREDENTIALS = `Bearer ${token}`;\r\n    const FETCH_URL = URL;\r\n    const headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    let res;\r\n    if (method === \"GET\") {\r\n      if (token) {\r\n        const headers = new Headers();\r\n        headers.append(\"Authorization\", CREDENTIALS);\r\n        res = await fetch(FETCH_URL, { headers });\r\n      } else {\r\n        res = await fetch(FETCH_URL);\r\n      }\r\n    } else if (method === \"POST\" || method === \"PUT\") {\r\n      if (token) headers.append(\"Authorization\", CREDENTIALS);\r\n      res = await fetch(FETCH_URL, {\r\n        method,\r\n        body: JSON.stringify(body),\r\n        headers,\r\n      });\r\n    } else if (method === \"DELETE\") {\r\n      if (token) {\r\n        headers.append(\"Authorization\", CREDENTIALS);\r\n        res = await fetch(FETCH_URL, { method, headers });\r\n      } else {\r\n        res = await fetch(FETCH_URL, { method });\r\n      }\r\n    }\r\n    if (!res.ok) {\r\n      throw new Error(await res.json().error);\r\n    }\r\n    const data = await res.json();\r\n    console.log(data);\r\n    return data;\r\n  } catch (e) {\r\n    console.error(\"error\", e);\r\n    return { error: e };\r\n  }\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Form, Input, Button, Row, Col, Modal } from \"antd\";\r\nimport { AuthContext } from \"../App\";\r\nimport { v4 } from \"uuid\";\r\nimport { doFetch } from \"../utils/useFetch\";\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst Login = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [formInfo, setFormInfo] = useState();\r\n  const { admin, setAdmin, setToken, token } = useContext(AuthContext);\r\n  const onFinish = async (values) => {\r\n    try {\r\n      const data = await doFetch(\"/auth\", \"POST\", values);\r\n      \r\n      if (data.description === \"Invalid credentials\" || data.error) {\r\n        setFormInfo({...values, id: v4()});\r\n        return showModal();\r\n      }\r\n      if (data.access_token) {\r\n        setToken(data.access_token);\r\n        setAdmin(values);\r\n        return;\r\n      }\r\n    } catch (e) {\r\n      console.error(\"error\", e);\r\n    }\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = async () => {\r\n    setIsModalVisible(false);\r\n    const data = await doFetch(\"/users\", \"POST\", formInfo, token);\r\n    if (data && !data.error) {\r\n      onFinish(formInfo);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.error(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Row className=\"mt-4\">\r\n      <Modal\r\n        title=\"Crear Cuenta\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <p>Email No Existe Desea Crear Una Nueva Cuenta</p>\r\n      </Modal>\r\n      <Col span={12} offset={6}>\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Usuario\"\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Campo obligatorio!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Campo obligatorio!\" }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/* eslint-disable no-template-curly-in-string */\r\nimport React, { useContext } from \"react\";\r\nimport { Input, Form, Button, DatePicker } from \"antd\";\r\nimport { v4 } from \"uuid\";\r\nimport { doFetch } from \"../utils/useFetch\";\r\nimport { AuthContext } from \"../App\";\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: \"${label} is required!\",\r\n  types: {\r\n    email: \"${label} is not a valid email!\",\r\n    number: \"${label} is not a valid number!\",\r\n  },\r\n  number: {\r\n    range: \"${label} must be between ${min} and ${max}\",\r\n  },\r\n};\r\n\r\nconst FormEvent = ({ setContests }) => {\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const postContest = async (values) => {\r\n    const sd = values.startEndDate[0]._d;\r\n    const ed = values.startEndDate[1]._d;\r\n    const start_date = `${\r\n      sd.getUTCDate() <= 9 ? `0${sd.getUTCDate()}` : sd.getUTCDate()\r\n    }-${\r\n      sd.getUTCMonth() + 1 <= 9\r\n        ? `0${sd.getUTCMonth() + 1}`\r\n        : `${sd.getUTCMonth() + 1}`\r\n    }-${sd.getUTCFullYear()}`;\r\n    const finish_date = `${\r\n      ed.getUTCDate() <= 9 ? `0${ed.getUTCDate()}` : ed.getUTCDate()\r\n    }-${\r\n      ed.getUTCMonth() + 1 <= 9\r\n        ? `0${sd.getUTCMonth() + 1}`\r\n        : `${sd.getUTCMonth() + 1}`\r\n    }-${ed.getUTCFullYear()}`;\r\n    const { name, script, bannerPath, recommendations, payment } = values;\r\n    const contestData = {\r\n      name,\r\n      script,\r\n      banner_path: bannerPath,\r\n      start_date,\r\n      finish_date,\r\n      recommendations,\r\n      payment,\r\n      url: v4(),\r\n      id: v4()\r\n    };\r\n    const newContest = await doFetch(\"/contests\", \"POST\", contestData, token);\r\n    setContests((prevContests) => [newContest, ...prevContests]);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"nest-messages\"\r\n      onFinish={(values) => postContest(values)}\r\n      validateMessages={validateMessages}\r\n    >\r\n      <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"bannerPath\"}\r\n        label=\"Banner\"\r\n        rules={[{ required: true }]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item name={\"payment\"} label=\"Pago\" rules={[{ required: true }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"startEndDate\"}\r\n        label=\"Fecha\"\r\n        rules={[{ required: true }]}\r\n      >\r\n        <RangePicker />\r\n      </Form.Item>\r\n      <Form.Item name={\"script\"} label=\"Guión\" rules={[{ required: true }]}>\r\n        <Input.TextArea />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"recommendations\"}\r\n        label=\"Recomendaciones\"\r\n        rules={[{ required: true }]}\r\n      >\r\n        <Input.TextArea />\r\n      </Form.Item>\r\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormEvent;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Row, Table, Col } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { doFetch } from \"../utils/useFetch\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { AuthContext } from \"../App\";\r\nimport FormEvent from \"../components/FormEvent\";\r\nconst initialColumns = [\r\n  {\r\n    title: \"URL\",\r\n    dataIndex: \"url\",\r\n    key: \"url\",\r\n    render: (name, row) => {\r\n      return <Link to={`/${row.url}/home`}>{name}</Link>;\r\n    },\r\n  },\r\n  {\r\n    title: \"Nombre\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n  },\r\n  {\r\n    title: \"Fecha Inicio\",\r\n    dataIndex: \"start_date\",\r\n    key: \"start_date\",\r\n  },\r\n  {\r\n    title: \"Pago\",\r\n    dataIndex: \"payment\",\r\n    key: \"payment\",\r\n  },\r\n];\r\n\r\nconst Contests = () => {\r\n  const [contests, setContests] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { token } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    async function getContests() {\r\n      const newContests = await doFetch(\"/contests\", \"GET\", null, token);\r\n      if (!newContests.error) {\r\n        setContests(newContests);\r\n      }\r\n    }\r\n    try {\r\n      setIsLoading(true);\r\n      getContests();\r\n    } catch (e) {\r\n      console.error(\"error\", e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [token, setContests]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Row className=\"mt-4\">\r\n        <Col>\r\n          <LoadingOutlined style={{ fontSize: 24 }} spin />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mt-4\">\r\n        <Col>\r\n          <FormEvent setContests={setContests}></FormEvent>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Table dataSource={contests} columns={initialColumns} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contests;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <p>Click para redireccionar a \"/\" que es una ruta conocida:</p>\r\n    <Link to=\"/\">Click!!</Link>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { Col, Button } from \"antd\";\r\nimport { AuthContext } from \"../App\";\r\nimport { doFetch } from \"../utils/useFetch\";\r\n\r\nfunction VoiceDetail({ voice, page, idx, contest, setVoices }) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { token } = useContext(AuthContext);\r\n  const [endpoint, setEndpoint] = useState(\"\");\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    try {\r\n      setEndpoint(\r\n        process.env.NODE_ENV === \"production\"\r\n          ? `${process.env.REACT_APP_URL_ENDPOINTS_PROD}/${contest.id}/${voice.id}`\r\n          : `${process.env.REACT_APP_URL_ENDPOINTS_TEST}/${contest.id}/${voice.id}`\r\n      );\r\n      console.log(endpoint);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [setEndpoint, contest.id, voice.id]);\r\n\r\n  const onDelete = async () => {\r\n    try {\r\n      const data = await doFetch(\r\n        `/contests/${contest.id}/voices/${voice.id}`,\r\n        \"DELETE\",\r\n        undefined,\r\n        token\r\n      );\r\n      if (!data.error) {\r\n        setVoices((prev) => prev.filter((cur) => cur.id !== voice.id));\r\n      }\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  };\r\n\r\n  const descargaConvertida = async () => {\r\n    console.log(endpoint);\r\n    const res = await fetch(endpoint);\r\n    console.log(res);\r\n    const audio = await res.blob();\r\n    console.log(audio);\r\n\r\n    let aTag = document.createElement(\"a\");\r\n    aTag.href = `${endpoint}/downloadVoiceConverted`;\r\n    aTag.target = \"_blank\";\r\n    aTag.click();\r\n  };\r\n  return (\r\n    <Col key={voice.id} className=\"m-3\">\r\n      <div className=\"card\">\r\n        <h5 className=\"card-header\">Audio # {idx + (page - 1) * 20 + 1}</h5>\r\n        <div className=\"card-body\">\r\n          <h5 className=\"card-title\">{voice.name + \" \" + voice.last_name}</h5>\r\n          <p className=\"card-text\">{voice.email}</p>\r\n          <div className=\"d-flex justify-center\">\r\n            <Button\r\n              onClick={async () => {\r\n                // const res = await fetch(ENDPOINT);\r\n                // console.log(res);\r\n                let aTag = document.createElement(\"a\");\r\n                console.log(voice.filename);\r\n                aTag.href = `https://voicecontest.s3.amazonaws.com/originals/${voice.filename}`;\r\n                aTag.target = \"_blank\";\r\n                aTag.click();\r\n              }}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              Descargar Original\r\n            </Button>\r\n            <Button onClick={descargaConvertida} className=\"btn btn-secondary\">\r\n              Descargar Convertida\r\n            </Button>\r\n          </div>\r\n          {isLoading &&\r\n            !endpoint(\r\n              <div class=\"spinner-border\" role=\"status\">\r\n                <span class=\"sr-only\">Loading...</span>\r\n              </div>\r\n            )}\r\n          {!isLoading && endpoint && (\r\n            <audio controls>\r\n              <source\r\n                id=\"original\"\r\n                src={`${endpoint}/downloadVoiceConverted`}\r\n                type=\"audio/mp3\"\r\n              />\r\n            </audio>\r\n          )}\r\n        </div>\r\n        {!!token && (\r\n          <Button type=\"primary\" onClick={onDelete} danger>\r\n            Eliminar\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default VoiceDetail;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Row, Col, Descriptions, Button, Input, Form, Pagination } from \"antd\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { doFetch } from \"../utils/useFetch\";\r\nimport { AuthContext } from \"../App\";\r\nimport { v4 } from \"uuid\";\r\nimport VoiceDetail from \"../components/VoiceDetail\";\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst ContestDetail = () => {\r\n  const [name, setName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [file, setFile] = useState();\r\n  const [observaciones, setObservaciones] = useState(\"\");\r\n  const [contest, setContest] = useState();\r\n  const [voices, setVoices] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [page, setPage] = useState(1);\r\n  const [totalVoices, setTotalVoices] = useState(0);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const { contestUrl } = useParams();\r\n  const { token } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function getContest(url) {\r\n      try {\r\n        setIsLoading(true);\r\n        const newContest = await doFetch(\r\n          `/contests/${url}`,\r\n          \"GET\",\r\n          null,\r\n          token\r\n        );\r\n        if (!newContest.error) {\r\n          setContest(newContest);\r\n          console.log(newContest);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"error\", e);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    getContest(contestUrl);\r\n  }, [contestUrl, setContest, token]);\r\n\r\n  useEffect(() => {\r\n    async function getVoices(idContest) {\r\n      try {\r\n        setIsLoading(true);\r\n        const newVoices = await doFetch(\r\n          `/contests/${idContest}/voices/${page}`,\r\n          \"GET\",\r\n          null,\r\n          null\r\n        );\r\n        const total = await doFetch(`/${idContest}/getLenVoices`, \"GET\");\r\n        console.log((\"count\", total));\r\n        console.log(\"newVoices\", newVoices);\r\n        if (!newVoices.error) {\r\n          setVoices(newVoices);\r\n        }\r\n        if (!total.error) {\r\n          console.log(total.totalVoices);\r\n          setTotalVoices(total.totalVoices);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"error\", e);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    if (contest && contest.id) getVoices(contest.id);\r\n  }, [contest, setIsLoading, setVoices, page]);\r\n\r\n  const onEdit = async (values) => {\r\n    try {\r\n      const editedContest = await doFetch(\r\n        `/contests/${contestUrl}`,\r\n        \"PUT\",\r\n        values,\r\n        token\r\n      );\r\n      if (!editedContest.error) {\r\n        setContest(editedContest);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"paila\", e);\r\n    } finally {\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  const onDelete = async () => {\r\n    try {\r\n      const data = await doFetch(\r\n        `/contests/${contestUrl}`,\r\n        \"DELETE\",\r\n        undefined,\r\n        token\r\n      );\r\n      if (!data.error) {\r\n        history.push(\"/\");\r\n      }\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  };\r\n\r\n  async function postVoice() {\r\n    try {\r\n      let voice = {\r\n        name: name,\r\n        last_name: lastName,\r\n        email: email,\r\n        observation_message: observaciones,\r\n      };  \r\n      let data = await doFetch(\r\n        `/contests/${contest.id}/voices/${page}`,\r\n        \"POST\",\r\n        {...voice, id: v4()},\r\n        token\r\n      );\r\n      console.log(data);\r\n      if (!data.error) {\r\n        const formData = new FormData();\r\n        formData.append(\"audio_file\", file);\r\n        const ENDPOINT =\r\n          process.env.NODE_ENV === \"production\"\r\n            ? `http://${process.env.REACT_APP_URL_ENDPOINTS_PROD}/contests/${contest.id}/voices/${data.id}`\r\n            : `http://${process.env.REACT_APP_URL_ENDPOINTS_TEST}/contests/${contest.id}/voices/${data.id}`;\r\n        console.log(ENDPOINT);\r\n        let res = await fetch(ENDPOINT, {\r\n          method: \"PUT\",\r\n          body: formData,\r\n        });\r\n        console.log(res);\r\n        let x = await res.json();\r\n        console.log(x);\r\n        setVoices((prevVoices) => [...prevVoices, x]);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"error subiendo voz\", e);\r\n    }\r\n  }\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Row className=\"mt-4\">\r\n        <Col>\r\n          <LoadingOutlined style={{ fontSize: 24 }} spin />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  if (!contest) {\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col>\r\n            <h3>Concurso no encontrado! Click para redireccionar</h3>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <h3>\r\n              <Link to=\"/\">Inicio</Link>\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"mt-4\">\r\n        <Col span={24}>\r\n          {token && <Link to=\"/\">Ir a Concursos</Link>}\r\n          {!isEditing && (\r\n            <Descriptions title=\"Información del Concurso\" bordered>\r\n              <Descriptions.Item label=\"Nombre\">\r\n                {contest.name}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"Pago\">\r\n                {contest.payment}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"Fecha Inicial\" span={6}>\r\n                {contest.start_date}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"Fecha Final\" span={6}>\r\n                {contest.finish_date}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"Guión\" span={6}>\r\n                {contest.script}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"Recomendaciones\" span={6}>\r\n                {contest.recommendations}\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n          )}\r\n          {isEditing && (\r\n            <Form {...layout} validateMessages onFinish={onEdit}>\r\n              <Form.Item name=\"name\" label=\"Nombre\">\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name=\"payment\" label=\"Pago\">\r\n                <Input type=\"number\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"start_date\" label=\"Fecha Inicial\">\r\n                <Input type=\"datetime-local\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"finish_date\" label=\"Fecha Final\">\r\n                <Input type=\"datetime-local\" />\r\n              </Form.Item>\r\n              <Form.Item name=\"banner_path\" label=\"Banner\">\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name=\"script\" label=\"Guión\">\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item name=\"recommendations\" label=\"Recomendaciones\">\r\n                <Input />\r\n              </Form.Item>\r\n              <Form.Item wrapperCol={{ offset: 8 }}>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Submit\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"center\" hidden={!token}>\r\n        <Col className=\"p-3\">\r\n          <Button type=\"primary\" onClick={() => setIsEditing(!isEditing)}>\r\n            {isEditing ? \"Dejar de editar\" : \"Editar\"}\r\n          </Button>\r\n        </Col>\r\n        <Col className=\"p-3\">\r\n          <Button type=\"primary\" onClick={onDelete} danger>\r\n            Eliminar\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"space-around\">\r\n        <Col>\r\n          <Form\r\n            name=\"nest-messages\"\r\n            validateMessages={validateMessages}\r\n            encType=\"multipart/form-data\"\r\n          >\r\n            <Form.Item\r\n              name=\"name\"\r\n              label=\"Nombre\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"last_name\"}\r\n              label=\"Apellido\"\r\n              onChange={(e) => setLastName(e.target.value)}\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"email\"}\r\n              label=\"Correo electrónico\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"original_voice_file_path\"\r\n              label=\"Archivo de voz\"\r\n              onChange={(e) => setFile(e.target.files[0])}\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input type=\"file\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"observation_message\"}\r\n              label=\"Observaciones\"\r\n              onChange={(e) => setObservaciones(e.target.value)}\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input.TextArea />\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ offset: 8 }}>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                onClick={() => postVoice()}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n        <Col>\r\n          <Row justify=\"center\">\r\n            {voices && voices.length === 0 && <div>No hay voces!</div>}\r\n            {voices &&\r\n              voices.map((voice, idx) => {\r\n                return (\r\n                  <VoiceDetail\r\n                    key={voice.id}\r\n                    voice={voice}\r\n                    idx={idx}\r\n                    contest={contest}\r\n                    page={page}\r\n                    setVoices={setVoices}\r\n                  />\r\n                );\r\n              })}\r\n          </Row>\r\n          <Row justify=\"center\">\r\n            <Col>\r\n              <Pagination\r\n                defaultCurrent={page}\r\n                pageSize={40}\r\n                total={totalVoices}\r\n                onChange={(page) => setPage(page)}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst validateMessages = {\r\n  required: \"${label} is required!\",\r\n  types: {\r\n    email: \"${label} is not a valid email!\",\r\n    number: \"${label} is not a valid number!\",\r\n  },\r\n  number: {\r\n    range: \"${label} must be between ${min} and ${max}\",\r\n  },\r\n};\r\n\r\nexport default ContestDetail;\r\n","import \"./App.css\";\r\nimport { Menu } from \"antd\";\r\nimport {\r\n  BrowserRouter as Browser,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport Login from \"./pages/Login\";\r\nimport { useMemo, useState, createContext } from \"react\";\r\nimport Contests from \"./pages/Contests\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport ContestDetail from \"./pages/ContestDetail\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nfunction App() {\r\n  const [admin, setAdmin] = useState();\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  const authentication = useMemo(() => ({ admin, setAdmin, token, setToken }), [\r\n    setAdmin,\r\n    admin,\r\n    token,\r\n    setToken,\r\n  ]);\r\n\r\n  const signOut = async () => {\r\n    // const res = await fetch(\"/signOut\");\r\n    // const data = await res.json();\r\n    setAdmin(undefined);\r\n    setToken(undefined);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Browser>\r\n        <AuthContext.Provider value={authentication}>\r\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item key=\"1\">\r\n              {!!token ? (\r\n                <Link to=\"/\" onClick={signOut}>\r\n                  Cerrar Sesion\r\n                </Link>\r\n              ) : (\r\n                <Link to=\"/\">{\"Login\"}</Link>\r\n              )}\r\n            </Menu.Item>\r\n          </Menu>\r\n          <Switch>\r\n            <Route\r\n              path=\"/\"\r\n              exact\r\n              component={() =>\r\n                !admin ? (\r\n                  <Login />\r\n                ) : (\r\n                  <PrivateRoute\r\n                    path=\"/\"\r\n                    exact\r\n                    isSignedIn={!!admin}\r\n                    component={() => <Contests />}\r\n                  />\r\n                )\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/:contestUrl/home\"\r\n              exact\r\n              component={() => <ContestDetail />}\r\n            />\r\n            <Route path=\"*\" component={NotFound} />\r\n          </Switch>\r\n        </AuthContext.Provider>\r\n      </Browser>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}