{"version":3,"sources":["components/PrivateRoute.js","utils/useFetch.js","pages/Login.js","components/FormEvent.js","pages/Contests.js","pages/NotFound.js","pages/ContestDetail.js","App.js","index.js"],"names":["PrivateRoute","Component","component","isSignedIn","rest","render","props","to","doFetch","a","url","method","body","token","URL","console","log","process","CREDENTIALS","FETCH_URL","headers","Headers","append","fetch","res","JSON","stringify","ok","Error","json","data","error","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","useState","isModalVisible","setIsModalVisible","formInfo","setFormInfo","useContext","AuthContext","setAdmin","admin","setToken","onFinish","values","description","showModal","access_token","handleOk","className","title","visible","onOk","onCancel","name","onFinishFailed","errorInfo","Item","label","rules","required","message","Password","type","htmlType","RangePicker","DatePicker","validateMessages","types","email","number","range","FormEvent","setContests","postContest","sd","startEndDate","_d","ed","start_date","getUTCDate","getUTCMonth","getUTCFullYear","finish_date","script","bannerPath","recommendations","payment","contestData","banner_path","v4","newContest","prevContests","TextArea","initialColumns","dataIndex","key","row","Contests","contests","isLoading","setIsLoading","useEffect","newContests","getContests","e","LoadingOutlined","style","fontSize","spin","dataSource","columns","NotFound","ContestDetail","contest","setContest","voices","setVoices","contestUrl","useParams","history","useHistory","getContest","idContest","newVoices","id","getVoices","onDelete","undefined","push","postVoice","prevVoices","Fragment","bordered","justify","hidden","onClick","danger","length","map","voice","createContext","App","authentication","useMemo","signOut","Provider","value","theme","mode","defaultSelectedKeys","path","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0782ccb7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({ component: Component, isSignedIn, ...rest }) => {\r\n  return (\r\n    // Show the component only when the user is logged in\r\n    // Otherwise, redirect the user to /signin page\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isSignedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","export async function doFetch(url = \"\", method = \"GET\", body, token) {\r\n  let URL = `http://localhost:5000${url}`;\r\n  console.log(process.env.NODE_ENV);\r\n  if (process.env.NODE_ENV === \"production\") {\r\n    URL = `http://172.24.98.84${url}`;\r\n  }\r\n  try {\r\n    const CREDENTIALS = `JWT ${token}`;\r\n    const FETCH_URL = URL;\r\n    const headers = new Headers();\r\n    headers.append(\"Content-Type\", \"application/json\");\r\n    let res;\r\n    if (method === \"GET\") {\r\n      if (token) {\r\n        const headers = new Headers();\r\n        headers.append(\"Authorization\", CREDENTIALS);\r\n        res = await fetch(FETCH_URL, { headers });\r\n      } else {\r\n        res = await fetch(FETCH_URL);\r\n      }\r\n    } else if (method === \"POST\" || method === \"PUT\") {\r\n      if (token) headers.append(\"Authorization\", CREDENTIALS);\r\n      res = await fetch(FETCH_URL, {\r\n        method,\r\n        body: JSON.stringify(body),\r\n        headers,\r\n      });\r\n    } else if (method === \"DELETE\") {\r\n      if (token) {\r\n        headers.append(\"Authorization\", CREDENTIALS);\r\n        res = await fetch(FETCH_URL, { method, headers });\r\n      } else {\r\n        res = await fetch(FETCH_URL, { method });\r\n      }\r\n    }\r\n    if (!res.ok) {\r\n      throw new Error(\"Request not fulfilled\");\r\n    }\r\n    const data = await res.json();\r\n    return data;\r\n  } catch (e) {\r\n    console.error(\"error\", e);\r\n    return { error: e };\r\n  }\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Form, Input, Button, Row, Col, Modal } from \"antd\";\r\nimport { AuthContext } from \"../App\";\r\nimport { doFetch } from \"../utils/useFetch\";\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 8, span: 16 },\r\n};\r\n\r\nconst Login = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const [formInfo, setFormInfo] = useState({});\r\n  const { admin, setAdmin, setToken, token } = useContext(AuthContext);\r\n  const onFinish = async (values) => {\r\n    try {\r\n      const data = await doFetch(\"/auth\", \"POST\", values);\r\n      if (data.description === \"Invalid credentials\" || data.error) {\r\n        setFormInfo(values);\r\n        return showModal();\r\n      }\r\n      if (data.access_token) {\r\n        setToken(data.access_token);\r\n        setAdmin(values);\r\n        return;\r\n      }\r\n    } catch (e) {\r\n      console.error(\"error\", e);\r\n    }\r\n  };\r\n\r\n  const showModal = () => {\r\n    setIsModalVisible(true);\r\n  };\r\n\r\n  const handleOk = async () => {\r\n    setIsModalVisible(false);\r\n    const data = await doFetch(\"/users\", \"POST\", formInfo, token);\r\n\r\n    if (data && !data.error) {\r\n      onFinish(formInfo);\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.error(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  return (\r\n    <Row className=\"mt-4\">\r\n      <Modal\r\n        title=\"Crear Cuenta\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n      >\r\n        <p>Email No Existe Desea Crear Una Nueva Cuenta</p>\r\n      </Modal>\r\n      <Col span={12} offset={6}>\r\n        <Form\r\n          {...layout}\r\n          name=\"basic\"\r\n          onFinish={onFinish}\r\n          onFinishFailed={onFinishFailed}\r\n        >\r\n          <Form.Item\r\n            label=\"Usuario\"\r\n            name=\"username\"\r\n            rules={[{ required: true, message: \"Campo obligatorio!\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            rules={[{ required: true, message: \"Campo obligatorio!\" }]}\r\n          >\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","/* eslint-disable no-template-curly-in-string */\r\nimport React, { useContext } from \"react\";\r\nimport { Input, Form, Button, DatePicker } from \"antd\";\r\nimport { v4 } from \"uuid\";\r\nimport { doFetch } from \"../utils/useFetch\";\r\nimport { AuthContext } from \"../App\";\r\nconst { RangePicker } = DatePicker;\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\n\r\nconst validateMessages = {\r\n  required: \"${label} is required!\",\r\n  types: {\r\n    email: \"${label} is not a valid email!\",\r\n    number: \"${label} is not a valid number!\",\r\n  },\r\n  number: {\r\n    range: \"${label} must be between ${min} and ${max}\",\r\n  },\r\n};\r\n\r\nconst FormEvent = ({ setContests }) => {\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const postContest = async (values) => {\r\n    const sd = values.startEndDate[0]._d;\r\n    const ed = values.startEndDate[1]._d;\r\n    const start_date = `${\r\n      sd.getUTCDate() <= 9 ? `0${sd.getUTCDate()}` : sd.getUTCDate()\r\n    }-${\r\n      sd.getUTCMonth() + 1 <= 9\r\n        ? `0${sd.getUTCMonth() + 1}`\r\n        : `${sd.getUTCMonth() + 1}`\r\n    }-${sd.getUTCFullYear()}`;\r\n    const finish_date = `${\r\n      ed.getUTCDate() <= 9 ? `0${ed.getUTCDate()}` : ed.getUTCDate()\r\n    }-${\r\n      ed.getUTCMonth() + 1 <= 9\r\n        ? `0${sd.getUTCMonth() + 1}`\r\n        : `${sd.getUTCMonth() + 1}`\r\n    }-${ed.getUTCFullYear()}`;\r\n    const { name, script, bannerPath, recommendations, payment } = values;\r\n    const contestData = {\r\n      name,\r\n      script,\r\n      banner_path: bannerPath,\r\n      start_date,\r\n      finish_date,\r\n      recommendations,\r\n      payment,\r\n      url: v4(),\r\n    };\r\n    const newContest = await doFetch(\"/contests\", \"POST\", contestData, token);\r\n    setContests((prevContests) => [newContest, ...prevContests]);\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      {...layout}\r\n      name=\"nest-messages\"\r\n      onFinish={(values) => postContest(values)}\r\n      validateMessages={validateMessages}\r\n    >\r\n      <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"bannerPath\"}\r\n        label=\"Banner\"\r\n        rules={[{ required: true }]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item name={\"payment\"} label=\"Pago\" rules={[{ required: true }]}>\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"startEndDate\"}\r\n        label=\"Fecha\"\r\n        rules={[{ required: true }]}\r\n      >\r\n        <RangePicker />\r\n      </Form.Item>\r\n      <Form.Item name={\"script\"} label=\"Guión\" rules={[{ required: true }]}>\r\n        <Input.TextArea />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"recommendations\"}\r\n        label=\"Recomendaciones\"\r\n        rules={[{ required: true }]}\r\n      >\r\n        <Input.TextArea />\r\n      </Form.Item>\r\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default FormEvent;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Row, Table, Col } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { doFetch } from \"../utils/useFetch\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { AuthContext } from \"../App\";\r\nimport FormEvent from \"../components/FormEvent\";\r\nconst initialColumns = [\r\n  {\r\n    title: \"URL\",\r\n    dataIndex: \"url\",\r\n    key: \"url\",\r\n    render: (name, row) => {\r\n      return <Link to={`/${row.url}/home`}>{name}</Link>;\r\n    },\r\n  },\r\n  {\r\n    title: \"Nombre\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n  },\r\n  {\r\n    title: \"Fecha Inicio\",\r\n    dataIndex: \"start_date\",\r\n    key: \"start_date\",\r\n  },\r\n  {\r\n    title: \"Pago\",\r\n    dataIndex: \"payment\",\r\n    key: \"payment\",\r\n  },\r\n];\r\n\r\nconst Contests = () => {\r\n  const [contests, setContests] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const { token } = useContext(AuthContext);\r\n  useEffect(() => {\r\n    async function getContests() {\r\n      const newContests = await doFetch(\"/contests\", \"GET\", null, token);\r\n      if (!newContests.error) {\r\n        setContests(newContests);\r\n      }\r\n    }\r\n    try {\r\n      setIsLoading(true);\r\n      getContests();\r\n    } catch (e) {\r\n      console.error(\"error\", e);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }, [token, setContests]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Row className=\"mt-4\">\r\n        <Col>\r\n          <LoadingOutlined style={{ fontSize: 24 }} spin />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"mt-4\">\r\n        <Col>\r\n          <FormEvent setContests={setContests}></FormEvent>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col span={24}>\r\n          <Table dataSource={contests} columns={initialColumns} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contests;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => (\r\n  <div>\r\n    <p>Click para redireccionar a \"/\" que es una ruta conocida:</p>\r\n    <Link to=\"/\">Click!!</Link>\r\n  </div>\r\n);\r\n\r\nexport default NotFound;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Row, Col, Badge, Descriptions, Button, Input, Form } from \"antd\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\nimport { doFetch } from \"../utils/useFetch\";\r\nimport { AuthContext } from \"../App\";\r\n\r\nconst ContestDetail = () => {\r\n  const [contest, setContest] = useState();\r\n  const [voices, setVoices] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { contestUrl } = useParams();\r\n  const { token } = useContext(AuthContext);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    async function getContest(url) {\r\n      try {\r\n        setIsLoading(true);\r\n        const newContest = await doFetch(\r\n          `/contests/${url}`,\r\n          \"GET\",\r\n          null,\r\n          token\r\n        );\r\n        if (!newContest.error) {\r\n          setContest(newContest);\r\n          console.log(newContest);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"error\", e);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    getContest(contestUrl);\r\n  }, [contestUrl, setContest, token]);\r\n\r\n  useEffect(() => {\r\n    async function getVoices(idContest) {\r\n      try {\r\n        setIsLoading(true);\r\n        console.log(idContest);\r\n        const newVoices = await doFetch(\r\n          `/contests/${idContest}/voices`,\r\n          \"GET\",\r\n          null,\r\n          null\r\n        );\r\n        if (!newVoices.error) {\r\n          console.log(newVoices);\r\n          setVoices(newVoices);\r\n        }\r\n      } catch (e) {\r\n        console.error(\"error\", e);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    if (contest && contest.id) getVoices(contest.id);\r\n  }, [contest, setIsLoading, setVoices]);\r\n\r\n  const onEdit = () => {};\r\n\r\n  const onDelete = async () => {\r\n    try {\r\n      const data = await doFetch(\r\n        `/contests/${contestUrl}`,\r\n        \"DELETE\",\r\n        undefined,\r\n        token\r\n      );\r\n      if (!data.error) {\r\n        history.push(\"/\");\r\n      }\r\n    } catch (e) {\r\n      console.log(\"error\", e);\r\n    }\r\n  };\r\n\r\n  const postVoice = async (values) => {\r\n    console.log(values);\r\n    try {\r\n      console.log(`/contests/${contest.id}/voices`);\r\n      const data = await doFetch(\r\n        `/contests/${contest.id}/voices`,\r\n        \"POST\",\r\n        values,\r\n        token\r\n      );\r\n      if (!data.error) {\r\n        setVoices((prevVoices) => [data, ...prevVoices]);\r\n      }\r\n      console.log(data, \"POSTTTT\");\r\n    } catch (e) {\r\n      console.error(\"error\", e);\r\n    } finally {\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Row className=\"mt-4\">\r\n        <Col>\r\n          <LoadingOutlined style={{ fontSize: 24 }} spin />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  if (!contest) {\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col>\r\n            <h3>Concurso no encontrado! Click para redireccionar</h3>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col>\r\n            <h3>\r\n              <Link to=\"/\">Inicio</Link>\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Row className=\"mt-4\">\r\n        <Col span={24}>\r\n          {token && <Link to=\"/\">Ir a Concursos</Link>}\r\n          <Descriptions title=\"Información del Concurso\" bordered>\r\n            <Descriptions.Item label=\"Nombre\">{contest.name}</Descriptions.Item>\r\n            <Descriptions.Item label=\"Pago\">\r\n              {contest.payment}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Fecha Inicial\" span={6}>\r\n              {contest.start_date}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Fecha Final\" span={6}>\r\n              {contest.finish_date}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Guión\" span={6}>\r\n              {contest.script}\r\n            </Descriptions.Item>\r\n            <Descriptions.Item label=\"Recomendaciones\" span={6}>\r\n              {contest.recommendations}\r\n            </Descriptions.Item>\r\n          </Descriptions>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"center\" hidden={!token}>\r\n        <Col className=\"p-3\">\r\n          <Button type=\"primary\" onClick={onEdit}>\r\n            Editar\r\n          </Button>\r\n        </Col>\r\n        <Col className=\"p-3\">\r\n          <Button type=\"primary\" onClick={onDelete} danger>\r\n            Eliminar\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Row justify=\"space-around\">\r\n        <Col>\r\n          {voices && voices.length === 0 && <div>No hay voces!</div>}\r\n          {voices &&\r\n            voices.map((voice) => <div key={voice.id}>{voice.name}</div>)}\r\n        </Col>\r\n        <Col>\r\n          <Form\r\n            name=\"nest-messages\"\r\n            onFinish={(values) => postVoice(values)}\r\n            validateMessages={validateMessages}\r\n          >\r\n            <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true }]}>\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"last_name\"}\r\n              label=\"Apellido\"\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"email\"}\r\n              label=\"Correo electrónico\"\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"original_voice_file_path\"}\r\n              label=\"Archivo de voz\"\r\n              // rules={[{ required: true }]}\r\n            >\r\n              <Input type=\"file\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name={\"observation_message\"}\r\n              label=\"Obervaciones\"\r\n              rules={[{ required: true }]}\r\n            >\r\n              <Input.TextArea />\r\n            </Form.Item>\r\n            <Form.Item wrapperCol={{ offset: 8 }}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst validateMessages = {\r\n  required: \"${label} is required!\",\r\n  types: {\r\n    email: \"${label} is not a valid email!\",\r\n    number: \"${label} is not a valid number!\",\r\n  },\r\n  number: {\r\n    range: \"${label} must be between ${min} and ${max}\",\r\n  },\r\n};\r\n\r\nexport default ContestDetail;\r\n","import \"./App.css\";\r\nimport { Menu } from \"antd\";\r\nimport {\r\n  BrowserRouter as Browser,\r\n  Route,\r\n  Switch,\r\n  Link,\r\n} from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport Login from \"./pages/Login\";\r\nimport { useMemo, useState, createContext } from \"react\";\r\nimport Contests from \"./pages/Contests\";\r\nimport NotFound from \"./pages/NotFound\";\r\nimport ContestDetail from \"./pages/ContestDetail\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nfunction App() {\r\n  const [admin, setAdmin] = useState();\r\n  const [token, setToken] = useState(\"\");\r\n\r\n  const authentication = useMemo(() => ({ admin, setAdmin, token, setToken }), [\r\n    setAdmin,\r\n    admin,\r\n    token,\r\n    setToken,\r\n  ]);\r\n\r\n  const signOut = async () => {\r\n    // const res = await fetch(\"/signOut\");\r\n    // const data = await res.json();\r\n    setAdmin(undefined);\r\n    setToken(undefined);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Browser>\r\n        <AuthContext.Provider value={authentication}>\r\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"1\"]}>\r\n            <Menu.Item key=\"1\">\r\n              {!!token ? (\r\n                <Link to=\"/\" onClick={signOut}>\r\n                  Cerrar Sesion\r\n                </Link>\r\n              ) : (\r\n                <Link to=\"/\">{\"Login\"}</Link>\r\n              )}\r\n            </Menu.Item>\r\n          </Menu>\r\n          <Switch>\r\n            <Route\r\n              path=\"/\"\r\n              exact\r\n              component={() =>\r\n                !admin ? (\r\n                  <Login />\r\n                ) : (\r\n                  <PrivateRoute\r\n                    path=\"/\"\r\n                    exact\r\n                    isSignedIn={!!admin}\r\n                    component={() => <Contests />}\r\n                  />\r\n                )\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/:contestUrl/home\"\r\n              exact\r\n              component={() => <ContestDetail />}\r\n            />\r\n            <Route path=\"*\" component={NotFound} />\r\n          </Switch>\r\n        </AuthContext.Provider>\r\n      </Browser>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}