{"version":3,"sources":["components/PrivateRoute.js","utils/useFetch.js","pages/Login.js","components/VoiceDetail.js","components/FormEvent.js","pages/Contests.js","pages/NotFound.js","pages/ContestDetail.js","App.js","index.js"],"names":["PrivateRoute","Component","component","isSignedIn","rest","render","props","to","doFetch","a","url","method","body","token","URL","console","log","process","CREDENTIALS","FETCH_URL","headers","Headers","append","fetch","res","JSON","stringify","ok","Error","json","error","data","ENDPOINT","layout","labelCol","span","wrapperCol","tailLayout","offset","Login","useState","isModalVisible","setIsModalVisible","formInfo","setFormInfo","useContext","AuthContext","setAdmin","admin","setToken","onFinish","values","description","showModal","access_token","handleOk","className","title","visible","onOk","onCancel","name","onFinishFailed","errorInfo","Item","label","rules","required","message","Password","type","htmlType","RangePicker","DatePicker","validateMessages","types","email","number","range","FormEvent","setContests","postContest","sd","startEndDate","_d","ed","start_date","getUTCDate","getUTCMonth","getUTCFullYear","finish_date","script","bannerPath","recommendations","payment","contestData","banner_path","v4","newContest","prevContests","TextArea","initialColumns","dataIndex","key","row","Contests","contests","isLoading","setIsLoading","useEffect","newContests","getContests","e","LoadingOutlined","style","fontSize","spin","dataSource","columns","NotFound","VoiceDetail","voice","page","idx","contest","setVoices","setOriginalAudioURL","id","state","toLowerCase","getAudio","onDelete","undefined","prev","filter","cur","blob","audio","window","createObjectURL","Audio","descargaConvertida","aTag","document","createElement","href","filename","target","click","last_name","onClick","class","role","controls","src","danger","ContestDetail","setName","lastName","setLastName","setEmail","file","setFile","observaciones","setObservaciones","setContest","voices","setPage","totalVoices","setTotalVoices","contestUrl","useParams","history","useHistory","getContest","idContest","newVoices","total","getVoices","push","observation_message","formData","FormData","x","prevVoices","Fragment","bordered","justify","hidden","encType","onChange","value","files","postVoice","length","map","defaultCurrent","pageSize","createContext","App","authentication","useMemo","signOut","Provider","theme","mode","defaultSelectedKeys","path","exact","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ed7a09e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = ({ component: Component, isSignedIn, ...rest }) => {\n  return (\n    // Show the component only when the user is logged in\n    // Otherwise, redirect the user to /signin page\n    <Route\n      {...rest}\n      render={(props) =>\n        isSignedIn ? <Component {...props} /> : <Redirect to=\"/\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","export async function doFetch(url = \"\", method = \"GET\", body, token) {\n  let URL = `http://172.24.98.143:4000${url}`;\n  console.log(process.env.NODE_ENV);\n  if (process.env.NODE_ENV === \"production\") {\n    URL = `http://172.24.98.143${url}`;\n  }\n  try {\n    const CREDENTIALS = `JWT ${token}`;\n    const FETCH_URL = URL;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    let res;\n    if (method === \"GET\") {\n      if (token) {\n        const headers = new Headers();\n        headers.append(\"Authorization\", CREDENTIALS);\n        res = await fetch(FETCH_URL, { headers });\n      } else {\n        res = await fetch(FETCH_URL);\n      }\n    } else if (method === \"POST\" || method === \"PUT\") {\n      if (token) headers.append(\"Authorization\", CREDENTIALS);\n      res = await fetch(FETCH_URL, {\n        method,\n        body: JSON.stringify(body),\n        headers,\n      });\n    } else if (method === \"DELETE\") {\n      if (token) {\n        headers.append(\"Authorization\", CREDENTIALS);\n        res = await fetch(FETCH_URL, { method, headers });\n      } else {\n        res = await fetch(FETCH_URL, { method });\n      }\n    }\n    if (!res.ok) {\n      throw new Error(await res.json().error);\n    }\n    const data = await res.json();\n    return data;\n  } catch (e) {\n    console.error(\"error\", e);\n    return { error: e };\n  }\n}\n","import React, { useState, useContext } from \"react\";\nimport { Form, Input, Button, Row, Col, Modal } from \"antd\";\nimport { AuthContext } from \"../App\";\nimport { doFetch } from \"../utils/useFetch\";\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nconst Login = () => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n  const [formInfo, setFormInfo] = useState({});\n  const { admin, setAdmin, setToken, token } = useContext(AuthContext);\n  const onFinish = async (values) => {\n    try {\n      const data = await doFetch(\"/auth\", \"POST\", values);\n      if (data.description === \"Invalid credentials\" || data.error) {\n        setFormInfo(values);\n        return showModal();\n      }\n      if (data.access_token) {\n        setToken(data.access_token);\n        setAdmin(values);\n        return;\n      }\n    } catch (e) {\n      console.error(\"error\", e);\n    }\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = async () => {\n    setIsModalVisible(false);\n    const data = await doFetch(\"/users\", \"POST\", formInfo, token);\n\n    if (data && !data.error) {\n      onFinish(formInfo);\n    }\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.error(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Row className=\"mt-4\">\n      <Modal\n        title=\"Crear Cuenta\"\n        visible={isModalVisible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <p>Email No Existe Desea Crear Una Nueva Cuenta</p>\n      </Modal>\n      <Col span={12} offset={6}>\n        <Form\n          {...layout}\n          name=\"basic\"\n          onFinish={onFinish}\n          onFinishFailed={onFinishFailed}\n        >\n          <Form.Item\n            label=\"Usuario\"\n            name=\"username\"\n            rules={[{ required: true, message: \"Campo obligatorio!\" }]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[{ required: true, message: \"Campo obligatorio!\" }]}\n          >\n            <Input.Password />\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useState, useContext } from \"react\";\nimport { Col, Button } from \"antd\";\nimport { AuthContext } from \"../App\";\nimport { doFetch } from \"../utils/useFetch\";\n\nlet ENDPOINT;\nfunction VoiceDetail({ voice, page, idx, contest, setVoices }) {\n  const [originalAudioURL, setOriginalAudioURL] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const { token } = useContext(AuthContext);\n\n  useEffect(() => {\n    ENDPOINT =\n      process.env.NODE_ENV === \"production\"\n        ? `http://172.24.98.143/${contest.id}/${voice.id}/downloadVoiceOriginal`\n        : `http://172.24.98.143:4000/${contest.id}/${voice.id}/downloadVoiceOriginal`;\n\tconsole.log(ENDPOINT);\n  }, [contest.id, voice.id]);\n\n  useEffect(() => {\n    if (voice && voice.state && voice.state.toLowerCase() === \"convertida\") {\n    }\n    getAudio();\n  }, [voice]);\n\n  const onDelete = async () => {\n    try {\n      const data = await doFetch(\n        `/contests/${contest.id}/voices/${voice.id}`,\n        \"DELETE\",\n        undefined,\n        token\n      );\n      if (!data.error) {\n        setVoices((prev) => prev.filter((cur) => cur !== voice.id));\n      }\n    } catch (e) {\n      console.log(\"error\", e);\n    }\n  };\n  const getAudio = async () => {\n    try {\n      setIsLoading(true);\n      const res = await fetch(ENDPOINT);\n      console.log(res);\n      const audio = await res.blob();\n      let url = window.URL.createObjectURL(audio);\n      new Audio(audio);\n      setOriginalAudioURL(url);\n      console.log(url);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const descargaConvertida = async () => {\n    console.log(ENDPOINT);\n    const res = await fetch(ENDPOINT);\n    console.log(res);\n    const audio = await res.blob();\n    console.log(audio);\n\n    let aTag = document.createElement(\"a\");\n    aTag.href =\n      process.env.NODE_ENV === \"production\"\n        ? `/home/estudiante/VoiceContest/back/processed/${voice.filename}`\n        : ENDPOINT;\n\n    aTag.target = \"_blank\";\n    aTag.click();\n  };\n  return (\n    <Col key={voice.id} className=\"m-3\">\n      <div className=\"card\">\n        <h5 className=\"card-header\">Audio # {idx + (page - 1) * 20 + 1}</h5>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{voice.name + \" \" + voice.last_name}</h5>\n          <p className=\"card-text\">{voice.email}</p>\n          <div className=\"d-flex justify-center\">\n            <Button\n              onClick={async () => {\n                // const res = await fetch(ENDPOINT);\n                // console.log(res);\n                let aTag = document.createElement(\"a\");\n                aTag.href =\n                  process.env.NODE_ENV === \"production\"\n                    ? `/home/estudiante/VoiceContest/back/originals/${voice.filename}`\n                    : ENDPOINT;\n\n                aTag.target = \"_blank\";\n                aTag.click();\n              }}\n              className=\"btn btn-primary\"\n            >\n              Descargar Original\n            </Button>\n            <Button onClick={descargaConvertida} className=\"btn btn-secondary\">\n              Descargar Convertida\n            </Button>\n          </div>\n          {isLoading && (\n            <div class=\"spinner-border\" role=\"status\">\n              <span class=\"sr-only\">Loading...</span>\n            </div>\n          )}\n          {!isLoading && (\n            <audio controls>\n              <source\n                id=\"original\"\n                src={\n                  process.env.NODE_ENV === \"production\"\n                    ? `/home/estudiante/VoiceContest/back/processed/${voice.filename}`\n                    : ENDPOINT\n                }\n                type=\"audio/mp3\"\n              />\n            </audio>\n          )}\n        </div>\n        {!!token && (\n          <Button type=\"primary\" onClick={onDelete} danger>\n            Eliminar\n          </Button>\n        )}\n      </div>\n    </Col>\n  );\n}\n\nexport default VoiceDetail;\n","/* eslint-disable no-template-curly-in-string */\nimport React, { useContext } from \"react\";\nimport { Input, Form, Button, DatePicker } from \"antd\";\nimport { v4 } from \"uuid\";\nimport { doFetch } from \"../utils/useFetch\";\nimport { AuthContext } from \"../App\";\nconst { RangePicker } = DatePicker;\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 16 },\n};\n\nconst validateMessages = {\n  required: \"${label} is required!\",\n  types: {\n    email: \"${label} is not a valid email!\",\n    number: \"${label} is not a valid number!\",\n  },\n  number: {\n    range: \"${label} must be between ${min} and ${max}\",\n  },\n};\n\nconst FormEvent = ({ setContests }) => {\n  const { token } = useContext(AuthContext);\n\n  const postContest = async (values) => {\n    const sd = values.startEndDate[0]._d;\n    const ed = values.startEndDate[1]._d;\n    const start_date = `${\n      sd.getUTCDate() <= 9 ? `0${sd.getUTCDate()}` : sd.getUTCDate()\n    }-${\n      sd.getUTCMonth() + 1 <= 9\n        ? `0${sd.getUTCMonth() + 1}`\n        : `${sd.getUTCMonth() + 1}`\n    }-${sd.getUTCFullYear()}`;\n    const finish_date = `${\n      ed.getUTCDate() <= 9 ? `0${ed.getUTCDate()}` : ed.getUTCDate()\n    }-${\n      ed.getUTCMonth() + 1 <= 9\n        ? `0${sd.getUTCMonth() + 1}`\n        : `${sd.getUTCMonth() + 1}`\n    }-${ed.getUTCFullYear()}`;\n    const { name, script, bannerPath, recommendations, payment } = values;\n    const contestData = {\n      name,\n      script,\n      banner_path: bannerPath,\n      start_date,\n      finish_date,\n      recommendations,\n      payment,\n      url: v4(),\n    };\n    const newContest = await doFetch(\"/contests\", \"POST\", contestData, token);\n    setContests((prevContests) => [newContest, ...prevContests]);\n  };\n\n  return (\n    <Form\n      {...layout}\n      name=\"nest-messages\"\n      onFinish={(values) => postContest(values)}\n      validateMessages={validateMessages}\n    >\n      <Form.Item name=\"name\" label=\"Nombre\" rules={[{ required: true }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={\"bannerPath\"}\n        label=\"Banner\"\n        rules={[{ required: true }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item name={\"payment\"} label=\"Pago\" rules={[{ required: true }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item\n        name={\"startEndDate\"}\n        label=\"Fecha\"\n        rules={[{ required: true }]}\n      >\n        <RangePicker />\n      </Form.Item>\n      <Form.Item name={\"script\"} label=\"Guión\" rules={[{ required: true }]}>\n        <Input.TextArea />\n      </Form.Item>\n      <Form.Item\n        name={\"recommendations\"}\n        label=\"Recomendaciones\"\n        rules={[{ required: true }]}\n      >\n        <Input.TextArea />\n      </Form.Item>\n      <Form.Item wrapperCol={{ ...layout.wrapperCol, offset: 8 }}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nexport default FormEvent;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Row, Table, Col } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { doFetch } from \"../utils/useFetch\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { AuthContext } from \"../App\";\nimport FormEvent from \"../components/FormEvent\";\nconst initialColumns = [\n  {\n    title: \"URL\",\n    dataIndex: \"url\",\n    key: \"url\",\n    render: (name, row) => {\n      return <Link to={`/${row.url}/home`}>{name}</Link>;\n    },\n  },\n  {\n    title: \"Nombre\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Fecha Inicio\",\n    dataIndex: \"start_date\",\n    key: \"start_date\",\n  },\n  {\n    title: \"Pago\",\n    dataIndex: \"payment\",\n    key: \"payment\",\n  },\n];\n\nconst Contests = () => {\n  const [contests, setContests] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { token } = useContext(AuthContext);\n  useEffect(() => {\n    async function getContests() {\n      const newContests = await doFetch(\"/contests\", \"GET\", null, token);\n      if (!newContests.error) {\n        setContests(newContests);\n      }\n    }\n    try {\n      setIsLoading(true);\n      getContests();\n    } catch (e) {\n      console.error(\"error\", e);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [token, setContests]);\n\n  if (isLoading) {\n    return (\n      <Row className=\"mt-4\">\n        <Col>\n          <LoadingOutlined style={{ fontSize: 24 }} spin />\n        </Col>\n      </Row>\n    );\n  }\n\n  return (\n    <>\n      <Row className=\"mt-4\">\n        <Col>\n          <FormEvent setContests={setContests}></FormEvent>\n        </Col>\n      </Row>\n      <Row>\n        <Col span={24}>\n          <Table dataSource={contests} columns={initialColumns} />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Contests;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst NotFound = () => (\n  <div>\n    <p>Click para redireccionar a \"/\" que es una ruta conocida:</p>\n    <Link to=\"/\">Click!!</Link>\n  </div>\n);\n\nexport default NotFound;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport {\n  Row,\n  Col,\n  Badge,\n  Descriptions,\n  Button,\n  Input,\n  Form,\n  Pagination,\n} from \"antd\";\nimport { Link, useParams, useHistory } from \"react-router-dom\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport { doFetch } from \"../utils/useFetch\";\nimport { AuthContext } from \"../App\";\nimport VoiceDetail from \"../components/VoiceDetail\";\n\nconst ContestDetail = () => {\n  const [name, setName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [file, setFile] = useState();\n  const [observaciones, setObservaciones] = useState(\"\");\n  const [contest, setContest] = useState();\n  const [voices, setVoices] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [page, setPage] = useState(1);\n  const [totalVoices, setTotalVoices] = useState(0);\n  const { contestUrl } = useParams();\n  const { token } = useContext(AuthContext);\n  const history = useHistory();\n\n  useEffect(() => {\n    async function getContest(url) {\n      try {\n        setIsLoading(true);\n        const newContest = await doFetch(\n          `/contests/${url}`,\n          \"GET\",\n          null,\n          token\n        );\n        if (!newContest.error) {\n          setContest(newContest);\n          console.log(newContest);\n        }\n      } catch (e) {\n        console.error(\"error\", e);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getContest(contestUrl);\n  }, [contestUrl, setContest, token]);\n\n  useEffect(() => {\n    async function getVoices(idContest) {\n      try {\n        setIsLoading(true);\n        const newVoices = await doFetch(\n          `/contests/${idContest}/voices/${page}`,\n          \"GET\",\n          null,\n          null\n        );\n        const total = await doFetch(`/${idContest}/getLenVoices`, \"GET\");\n        console.log((\"count\", total));\n        console.log(\"newVoices\", newVoices);\n        if (!newVoices.error) {\n          setVoices(newVoices);\n        }\n        if (!total.error) {\n          console.log(total.totalVoices);\n          setTotalVoices(total.totalVoices);\n        }\n      } catch (e) {\n        console.error(\"error\", e);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    if (contest && contest.id) getVoices(contest.id);\n  }, [contest, setIsLoading, setVoices, page]);\n\n  const onEdit = () => {};\n\n  const onDelete = async () => {\n    try {\n      const data = await doFetch(\n        `/contests/${contestUrl}`,\n        \"DELETE\",\n        undefined,\n        token\n      );\n      if (!data.error) {\n        history.push(\"/\");\n      }\n    } catch (e) {\n      console.log(\"error\", e);\n    }\n  };\n\n  async function postVoice() {\n    try {\n      let voice = {\n        name: name,\n        last_name: lastName,\n        email: email,\n        observation_message: observaciones,\n      };\n      let data = await doFetch(\n        `/contests/${contest.id}/voices/${page}`,\n        \"POST\",\n        voice,\n        token\n      );\n      console.log(data);\n      if (!data.error) {\n        const formData = new FormData();\n        formData.append(\"audio_file\", file);\n        const ENDPOINT =\n          process.env.NODE_ENV === \"production\"\n            ? `http://172.24.98.143/contests/${contest.id}/voices/${data.id}`\n            : `http://172.24.98.143:4000/contests/${contest.id}/voices/${data.id}`;\n        console.log(\"ENDPOINT FETCH PUT:\",ENDPOINT );\n\tconsole.log(file, formData);\n\tlet res = await fetch(ENDPOINT, {\n          method: \"PUT\",\n          body: formData,\n        });\n\tconsole.log(\"RESPONSE FETCH PUT:\",res);\n        let x = await res.json();\n        setVoices((prevVoices) => [...prevVoices, x]);\n      }\n    } catch (e) {\n      console.error(\"error subiendo voz\", e);\n    } finally {\n    }\n  }\n\n  if (isLoading) {\n    return (\n      <Row className=\"mt-4\">\n        <Col>\n          <LoadingOutlined style={{ fontSize: 24 }} spin />\n        </Col>\n      </Row>\n    );\n  }\n\n  if (!contest) {\n    return (\n      <>\n        <Row>\n          <Col>\n            <h3>Concurso no encontrado! Click para redireccionar</h3>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col>\n            <h3>\n              <Link to=\"/\">Inicio</Link>\n            </h3>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n  const changeFile = (ev) => {\n    console.log(ev.target.files);\n    setFile(ev.target.files[0]);\n  };\n  return (\n    <React.Fragment>\n      <Row className=\"mt-4\">\n        <Col span={24}>\n          {token && <Link to=\"/\">Ir a Concursos</Link>}\n          <Descriptions title=\"Información del Concurso\" bordered>\n            <Descriptions.Item label=\"Nombre\">{contest.name}</Descriptions.Item>\n            <Descriptions.Item label=\"Pago\">\n              {contest.payment}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Fecha Inicial\" span={6}>\n              {contest.start_date}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Fecha Final\" span={6}>\n              {contest.finish_date}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Guión\" span={6}>\n              {contest.script}\n            </Descriptions.Item>\n            <Descriptions.Item label=\"Recomendaciones\" span={6}>\n              {contest.recommendations}\n            </Descriptions.Item>\n          </Descriptions>\n        </Col>\n      </Row>\n      <Row justify=\"center\" hidden={!token}>\n        <Col className=\"p-3\">\n          <Button type=\"primary\" onClick={onEdit}>\n            Editar\n          </Button>\n        </Col>\n        <Col className=\"p-3\">\n          <Button type=\"primary\" onClick={onDelete} danger>\n            Eliminar\n          </Button>\n        </Col>\n      </Row>\n      <Row justify=\"space-around\">\n        <Col>\n          <Form\n            name=\"nest-messages\"\n            validateMessages={validateMessages}\n            encType=\"multipart/form-data\"\n          >\n            <Form.Item\n              name=\"name\"\n              label=\"Nombre\"\n              onChange={(e) => setName(e.target.value)}\n              rules={[{ required: true }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name={\"last_name\"}\n              label=\"Apellido\"\n              onChange={(e) => setLastName(e.target.value)}\n              rules={[{ required: true }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name={\"email\"}\n              label=\"Correo electrónico\"\n              onChange={(e) => setEmail(e.target.value)}\n              rules={[{ required: true }]}\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"original_voice_file_path\"\n              label=\"Archivo de voz\"\n              onChange={(e) => setFile(e.target.files[0])}\n              rules={[{ required: true }]}\n            >\n              <Input type=\"file\" />\n            </Form.Item>\n            <Form.Item\n              name={\"observation_message\"}\n              label=\"Obervaciones\"\n              onChange={(e) => setObservaciones(e.target.value)}\n              rules={[{ required: true }]}\n            >\n              <Input.TextArea />\n            </Form.Item>\n            <Form.Item wrapperCol={{ offset: 8 }}>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                onClick={() => postVoice()}\n              >\n                Submit\n              </Button>\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col>\n          <Row justify=\"center\">\n            {voices && voices.length === 0 && <div>No hay voces!</div>}\n            {voices &&\n              voices.map((voice, idx) => {\n                return (\n                  <VoiceDetail\n                    key={voice.id}\n                    voice={voice}\n                    idx={idx}\n                    contest={contest}\n                    page={page}\n                    setVoices={setVoices}\n                  />\n                );\n              })}\n          </Row>\n          <Row justify=\"center\">\n            <Col>\n              <Pagination\n                defaultCurrent={page}\n                pageSize={40}\n                total={totalVoices}\n                onChange={(page) => setPage(page)}\n              />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </React.Fragment>\n  );\n};\n\nconst validateMessages = {\n  required: \"${label} is required!\",\n  types: {\n    email: \"${label} is not a valid email!\",\n    number: \"${label} is not a valid number!\",\n  },\n  number: {\n    range: \"${label} must be between ${min} and ${max}\",\n  },\n};\n\nexport default ContestDetail;\n","import \"./App.css\";\nimport { Menu } from \"antd\";\nimport {\n  BrowserRouter as Browser,\n  Route,\n  Switch,\n  Link,\n} from \"react-router-dom\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Login from \"./pages/Login\";\nimport { useMemo, useState, createContext } from \"react\";\nimport Contests from \"./pages/Contests\";\nimport NotFound from \"./pages/NotFound\";\nimport ContestDetail from \"./pages/ContestDetail\";\n\nexport const AuthContext = createContext();\n\nfunction App() {\n  const [admin, setAdmin] = useState();\n  const [token, setToken] = useState(\"\");\n\n  const authentication = useMemo(() => ({ admin, setAdmin, token, setToken }), [\n    setAdmin,\n    admin,\n    token,\n    setToken,\n  ]);\n\n  const signOut = async () => {\n    // const res = await fetch(\"/signOut\");\n    // const data = await res.json();\n    setAdmin(undefined);\n    setToken(undefined);\n  };\n\n  return (\n    <div className=\"App\">\n      <Browser>\n        <AuthContext.Provider value={authentication}>\n          <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"1\"]}>\n            <Menu.Item key=\"1\">\n              {!!token ? (\n                <Link to=\"/\" onClick={signOut}>\n                  Cerrar Sesion\n                </Link>\n              ) : (\n                <Link to=\"/\">{\"Login\"}</Link>\n              )}\n            </Menu.Item>\n          </Menu>\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              component={() =>\n                !admin ? (\n                  <Login />\n                ) : (\n                  <PrivateRoute\n                    path=\"/\"\n                    exact\n                    isSignedIn={!!admin}\n                    component={() => <Contests />}\n                  />\n                )\n              }\n            />\n            <Route\n              path=\"/:contestUrl/home\"\n              exact\n              component={() => <ContestDetail />}\n            />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n        </AuthContext.Provider>\n      </Browser>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}